name: App CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
      - '!api/.gitignore'

defaults:
  run:
    shell: bash
    working-directory: python/api

# AWSとのOICDでの認証認可に必要
permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: 1.6.0
  AWS_REGION: ap-northeast-1
  ENV: stg

jobs:
  build:
    name: "App CI"
    runs-on: ubuntu-latest
    # outputs:
    #   TF_PLAN_EXITCODE: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      # AWSのアクセスキーを使った認証はアンチパターン。
      # BestプラクティスはOpenID Connect(OIDC)を認証認可に使うこと。
      # 以下はOIDCをGithub Actions-AWS間で行うためのアクションズ
      - name: Configure AWS Credentials
        id: aws_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.aws_creds.outputs.aws-account-id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPOSITORY }}
          tags: |
            type=ref,event=tag
            type=sha

      # https://github.com/aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: some/where
          platforms: linux/amd64,linux/arm64
          push : true
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false

  deploy:
    name: "App CD"
    needs: [build]
    # if: needs.build.outputs.TF_PLAN_EXITCODE == 2
    # settings > enviroments > add で production と入力し追加する。
    # settings > enviroments > required reviewersにチェックを入れることでJob実行時にレビューが必須になる。
    enviroment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      # deploy to ECS
      - name: Get latest ECS task definition
        run: aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} --query taskDefinition > task_definition.json
      - name: Render task definition
        id: render_task_definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task_definition.json
          container-name: app
          image: ${{secrets.AWS_ECR_REPOSITORY_URI}}:${{github.sha}}
      - name: Deploy to ECS (Update task definition)
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{steps.render_task_definition.outputs.task-definition}}
          service: ${{secrets.ECS_SERVICE_NAME}}
          cluster: ${{secrets.ECS_CLUSTER_NAME}}
          wait-for-service-stability: true